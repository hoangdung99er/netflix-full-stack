{"ast":null,"code":"var _jsxFileName = \"/home/dung/netflix-project/client/src/components/List/List.js\",\n    _s = $RefreshSig$();\n\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\nimport ListItem from \"../ListItem/ListItem\";\nimport \"./List.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List({\n  list\n}) {\n  _s();\n\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNuber] = useState(0);\n  const [clickLimit, setClickLimit] = useState(window.innerWidth / 230);\n  const listRef = useRef();\n\n  const handleClick = direction => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 50;\n\n    if (direction === \"left\" && slideNumber > 0) {\n      setSlideNuber(prevState => prevState - 1);\n      listRef.current.style.transform = `translateX(${260 + distance}px)`;\n    }\n\n    if (direction === \"right\" && slideNumber < 8 - clickLimit) {\n      setSlideNuber(prevState => prevState + 1);\n      listRef.current.style.transform = `translateX(${-260 + distance}px)`;\n    }\n\n    console.log(distance);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosOutlined, {\n        onClick: () => handleClick(\"left\"),\n        style: {\n          display: !isMoved && \"none\"\n        },\n        className: \"arrow left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: listRef,\n        children: list.content.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n          index: i,\n          item: item\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosOutlined, {\n        onClick: () => handleClick(\"right\"),\n        className: \"arrow right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"fBC4iXZ1N9XRrCwr2zaknL4GBhQ=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/dung/netflix-project/client/src/components/List/List.js"],"names":["ArrowBackIosOutlined","ArrowForwardIosOutlined","React","useRef","useState","ListItem","List","list","isMoved","setIsMoved","slideNumber","setSlideNuber","clickLimit","setClickLimit","window","innerWidth","listRef","handleClick","direction","distance","current","getBoundingClientRect","x","prevState","style","transform","console","log","title","display","content","map","item","i"],"mappings":";;;AAAA,SACEA,oBADF,EAEEC,uBAFF,QAGO,oBAHP;AAIA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,aAAd,IAA+BP,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACU,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA5C;AAEA,QAAMC,OAAO,GAAGb,MAAM,EAAtB;;AAEA,QAAMc,WAAW,GAAIC,SAAD,IAAe;AACjCT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIU,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,CAAxC,GAA4C,EAA3D;;AACA,QAAIJ,SAAS,KAAK,MAAd,IAAwBR,WAAW,GAAG,CAA1C,EAA6C;AAC3CC,MAAAA,aAAa,CAAEY,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAb;AACAP,MAAAA,OAAO,CAACI,OAAR,CAAgBI,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,MAAMN,QAAS,KAA/D;AACD;;AACD,QAAID,SAAS,KAAK,OAAd,IAAyBR,WAAW,GAAG,IAAIE,UAA/C,EAA2D;AACzDD,MAAAA,aAAa,CAAEY,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAb;AACAP,MAAAA,OAAO,CAACI,OAAR,CAAgBI,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,CAAC,GAAD,GAAON,QAAS,KAAhE;AACD;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BZ,IAAI,CAACqB;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,oBAAD;AACE,QAAA,OAAO,EAAE,MAAMX,WAAW,CAAC,MAAD,CAD5B;AAEE,QAAA,KAAK,EAAE;AAAEY,UAAAA,OAAO,EAAE,CAACrB,OAAD,IAAY;AAAvB,SAFT;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEQ,OAAhC;AAAA,kBACGT,IAAI,CAACuB,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,kBAChB,QAAC,QAAD;AAAkB,UAAA,KAAK,EAAEA,CAAzB;AAA4B,UAAA,IAAI,EAAED;AAAlC,WAAeC,CAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,uBAAD;AACE,QAAA,OAAO,EAAE,MAAMhB,WAAW,CAAC,OAAD,CAD5B;AAEE,QAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1CQX,I;;KAAAA,I;AA4CT,eAAeA,IAAf","sourcesContent":["import {\n  ArrowBackIosOutlined,\n  ArrowForwardIosOutlined,\n} from \"@material-ui/icons\";\nimport React, { useRef, useState } from \"react\";\nimport ListItem from \"../ListItem/ListItem\";\nimport \"./List.scss\";\n\nfunction List({ list }) {\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNuber] = useState(0);\n  const [clickLimit, setClickLimit] = useState(window.innerWidth / 230);\n\n  const listRef = useRef();\n\n  const handleClick = (direction) => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 50;\n    if (direction === \"left\" && slideNumber > 0) {\n      setSlideNuber((prevState) => prevState - 1);\n      listRef.current.style.transform = `translateX(${260 + distance}px)`;\n    }\n    if (direction === \"right\" && slideNumber < 8 - clickLimit) {\n      setSlideNuber((prevState) => prevState + 1);\n      listRef.current.style.transform = `translateX(${-260 + distance}px)`;\n    }\n    console.log(distance);\n  };\n\n  return (\n    <div className=\"list\">\n      <span className=\"listTitle\">{list.title}</span>\n      <div className=\"wrapper\">\n        <ArrowBackIosOutlined\n          onClick={() => handleClick(\"left\")}\n          style={{ display: !isMoved && \"none\" }}\n          className=\"arrow left\"\n        />\n        <div className=\"container\" ref={listRef}>\n          {list.content.map((item, i) => (\n            <ListItem key={i} index={i} item={item} />\n          ))}\n        </div>\n        <ArrowForwardIosOutlined\n          onClick={() => handleClick(\"right\")}\n          className=\"arrow right\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}
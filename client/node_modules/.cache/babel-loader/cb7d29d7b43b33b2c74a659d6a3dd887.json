{"ast":null,"code":"var _jsxFileName = \"/home/dung/netflix-project/client/src/components/ListItem/ListItem.js\",\n    _s = $RefreshSig$();\n\nimport { Add, PlayArrow, ThumbDownAltOutlined, ThumbUpAltOutlined } from \"@material-ui/icons\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport \"./ListItem.scss\";\nimport HttpHook from \"../../hooks/HttpHook\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth/AuthContext\"; // import trailer from '../../../public/assets/trailer.mp4'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListItem({\n  index,\n  item\n}) {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const [isHoverd, setIsHovered] = useState(false);\n  const {\n    sendRequest\n  } = HttpHook();\n  const [movie, setMovie] = useState({});\n  const DS = process.env.REACT_APP_DOMAIN_SERVER;\n  useEffect(() => {\n    const getRandomLists = async () => {\n      const response = await sendRequest(`${DS}/movie/find/${item}`, \"GET\", null, {\n        Authorization: \"Bearer \" + token\n      });\n      setMovie(response === null || response === void 0 ? void 0 : response.movie);\n    };\n\n    getRandomLists();\n  }, [DS, sendRequest, item, token]);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: {\n      pathname: \"/watch\",\n      movie: movie\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listItem\",\n      style: {\n        left: isHoverd && index * 255 - 50 + index * 2.5\n      },\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), isHoverd && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          src: movie.trailer,\n          autoPlay: true,\n          loop: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icons\",\n            children: [/*#__PURE__*/_jsxDEV(PlayArrow, {\n              className: \"icon play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Add, {\n              className: \"icon add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ThumbUpAltOutlined, {\n              className: \"icon like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ThumbDownAltOutlined, {\n              className: \"icon dislike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itemInfoTop\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"limitAge\",\n              children: [movie.limit, \"+\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: movie.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"desc\",\n            children: movie.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre\",\n            children: movie.genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListItem, \"iQnyK0cgvHGUh/9Uvxf4Rt/WXbc=\");\n\n_c = ListItem;\nexport default ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["/home/dung/netflix-project/client/src/components/ListItem/ListItem.js"],"names":["Add","PlayArrow","ThumbDownAltOutlined","ThumbUpAltOutlined","React","useEffect","useState","useContext","HttpHook","Link","AuthContext","ListItem","index","item","token","isHoverd","setIsHovered","sendRequest","movie","setMovie","DS","process","env","REACT_APP_DOMAIN_SERVER","getRandomLists","response","Authorization","pathname","left","img","trailer","duration","limit","year","desc","genre"],"mappings":"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","sourcesContent":["import {\n  Add,\n  PlayArrow,\n  ThumbDownAltOutlined,\n  ThumbUpAltOutlined,\n} from \"@material-ui/icons\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport \"./ListItem.scss\";\nimport HttpHook from \"../../hooks/HttpHook\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/auth/AuthContext\";\n// import trailer from '../../../public/assets/trailer.mp4'\n\nfunction ListItem({ index, item }) {\n  const { token } = useContext(AuthContext);\n  const [isHoverd, setIsHovered] = useState(false);\n  const { sendRequest } = HttpHook();\n  const [movie, setMovie] = useState({});\n  const DS = process.env.REACT_APP_DOMAIN_SERVER;\n\n  useEffect(() => {\n    const getRandomLists = async () => {\n      const response = await sendRequest(\n        `${DS}/movie/find/${item}`,\n        \"GET\",\n        null,\n        {\n          Authorization: \"Bearer \" + token,\n        }\n      );\n\n      setMovie(response?.movie);\n    };\n    getRandomLists();\n  }, [DS, sendRequest, item, token]);\n  return (\n    <Link to={{ pathname: \"/watch\", movie: movie }}>\n      <div\n        className=\"listItem\"\n        style={{ left: isHoverd && index * 255 - 50 + index * 2.5 }}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <img src={movie.img} alt=\"\" />\n        {isHoverd && (\n          <>\n            <video src={movie.trailer} autoPlay={true} loop></video>\n            <div className=\"itemInfo\">\n              <div className=\"icons\">\n                <PlayArrow className=\"icon play\" />\n                <Add className=\"icon add\" />\n                <ThumbUpAltOutlined className=\"icon like\" />\n                <ThumbDownAltOutlined className=\"icon dislike\" />\n              </div>\n              <div className=\"itemInfoTop\">\n                <span>{movie.duration}</span>\n                <span className=\"limitAge\">{movie.limit}+</span>\n                <span>{movie.year}</span>\n              </div>\n              <div className=\"desc\">{movie.desc}</div>\n              <div className=\"genre\">{movie.genre}</div>\n            </div>\n          </>\n        )}\n      </div>\n    </Link>\n  );\n}\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}
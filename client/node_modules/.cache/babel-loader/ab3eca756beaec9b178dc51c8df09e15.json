{"ast":null,"code":"var _jsxFileName = \"/home/dung/netflix-project/client/src/pages/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Featured from \"../../components/Featured/Featured\";\nimport List from \"../../components/List/List\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport \"./Home.scss\";\nimport HttpHook from \"../../hooks/HttpHook\";\nimport { AuthContext } from \"../../context/auth/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home(props) {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const [lists, setLists] = useState([]);\n  const [genre, setGenre] = useState(null);\n  const {\n    sendRequest\n  } = HttpHook();\n  const DS = process.env.REACT_APP_DOMAIN_SERVER;\n  useEffect(() => {\n    const getRandomLists = async () => {\n      const response = await sendRequest(`${DS}/list${props.type ? \"?type=\" + props.type : \"\"}${genre ? \"&genre=\" + genre : \"\"}`, \"GET\", null, {\n        Authorization: \"Bearer \" + token\n      });\n      setLists(response === null || response === void 0 ? void 0 : response.list);\n    };\n\n    getRandomLists();\n  }, [DS, sendRequest, props.type, genre, token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Featured, {\n      type: props.type,\n      setGenre: setGenre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), lists === null || lists === void 0 ? void 0 : lists.map(list => /*#__PURE__*/_jsxDEV(List, {\n      list: list\n    }, list._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"9g1yTWHUmkVwBo2FDh/fbpMBA1U=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/dung/netflix-project/client/src/pages/Home/Home.js"],"names":["React","useEffect","useState","useContext","Featured","List","Navbar","HttpHook","AuthContext","Home","props","token","lists","setLists","genre","setGenre","sendRequest","DS","process","env","REACT_APP_DOMAIN_SERVER","getRandomLists","response","type","Authorization","list","map","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,WAAT,QAA4B,gCAA5B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAYR,UAAU,CAACK,WAAD,CAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAkBT,QAAQ,EAAhC;AACA,QAAMU,EAAE,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAvB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,cAAc,GAAG,YAAY;AACjC,YAAMC,QAAQ,GAAG,MAAMN,WAAW,CAC/B,GAAEC,EAAG,QAAOP,KAAK,CAACa,IAAN,GAAa,WAAWb,KAAK,CAACa,IAA9B,GAAqC,EAAG,GACnDT,KAAK,GAAG,YAAYA,KAAf,GAAuB,EAC7B,EAH+B,EAIhC,KAJgC,EAKhC,IALgC,EAMhC;AACEU,QAAAA,aAAa,EAAE,YAAYb;AAD7B,OANgC,CAAlC;AAWAE,MAAAA,QAAQ,CAACS,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEG,IAAX,CAAR;AACD,KAbD;;AAcAJ,IAAAA,cAAc;AACf,GAhBQ,EAgBN,CAACJ,EAAD,EAAKD,WAAL,EAAkBN,KAAK,CAACa,IAAxB,EAA8BT,KAA9B,EAAqCH,KAArC,CAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAED,KAAK,CAACa,IAAtB;AAA4B,MAAA,QAAQ,EAAER;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGH,KAHH,aAGGA,KAHH,uBAGGA,KAAK,CAAEc,GAAP,CAAYD,IAAD,iBACV,QAAC,IAAD;AAAqB,MAAA,IAAI,EAAEA;AAA3B,OAAWA,IAAI,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA,YADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlCQlB,I;;KAAAA,I;AAoCT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport Featured from \"../../components/Featured/Featured\";\nimport List from \"../../components/List/List\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport \"./Home.scss\";\nimport HttpHook from \"../../hooks/HttpHook\";\nimport { AuthContext } from \"../../context/auth/AuthContext\";\n\nfunction Home(props) {\n  const { token } = useContext(AuthContext);\n  const [lists, setLists] = useState([]);\n  const [genre, setGenre] = useState(null);\n  const { sendRequest } = HttpHook();\n  const DS = process.env.REACT_APP_DOMAIN_SERVER;\n\n  useEffect(() => {\n    const getRandomLists = async () => {\n      const response = await sendRequest(\n        `${DS}/list${props.type ? \"?type=\" + props.type : \"\"}${\n          genre ? \"&genre=\" + genre : \"\"\n        }`,\n        \"GET\",\n        null,\n        {\n          Authorization: \"Bearer \" + token,\n        }\n      );\n\n      setLists(response?.list);\n    };\n    getRandomLists();\n  }, [DS, sendRequest, props.type, genre, token]);\n\n  return (\n    <div className=\"home\">\n      <Navbar />\n      <Featured type={props.type} setGenre={setGenre} />\n      {lists?.map((list) => (\n        <List key={list._id} list={list} />\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}